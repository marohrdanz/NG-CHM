##
##  Create build tag, build artifacts and push to NG-CHM-Artifacts triggered by push to main
##
##  This workflow has two sequential jobs:
##
##  1. make_build_tag
##
##     Adds a incremental build tag to the repo based on:
##
##      - Version number in CompatibilityManager.js
##      - Existing '-build-' tags in repo
##
##     For example, if there are exiting tags in the repo:
##
##      - 2.22.1-build-4
##      - 2.21.0-build-3
##      - 2.20.1-build-2
##
##      and the version from CompatibilityManager.js is '2.22.1', the new tag
##      will be: 2.22.1-build-5.
##
##  2. build_artifacts
##
##     Builds all artifacts from Dockerfile and checks them into the 'NG-CHM-Artifacts'
##     repo with the same tag as the build tag from the first job.
##
##     Artifacts built:
##
##     - ShaidyMapGen.jar
##     - GalaxyMapGen.jar
##     - GUIBuilderMapGen.jar
##     - ngchmWidget-min.js
##     - ngchmEmbed-min.js
##     - WebContent/ngChmApp.html
##     - WebContent/server.app (directory)
##

name: NG-CHM-Artifacts build only
## concurrency group prevents race condition with NG-CHM-Artifacts_release.yml
concurrency: artifacts
on:
  push:
    branches:
      main
  workflow_dispatch:

jobs:
  make_build_tag:
    runs-on: ubuntu-22.04
    name: Tag w/ build number
    strategy:
      max-parallel: 1
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.sha }}
      # https://github.com/marohrdanz/extract-version-from-file
      # Output from this step is version from CompatibilityManager as 'version_number'.
      - name: Get version number
        id: get_version_number
        uses: marohrdanz/extract-version-from-file@v1.0.1
        with:
          file_path: 'NGCHM/WebContent/javascript/CompatibilityManager.js'
          start_string: '  CM.version = '
    outputs:
      build_number: ${{ steps.make_tag.outputs.build_number }}
      tag_name: ${{ steps.make_tag.outputs.tag_name }}
  build_artifacts:
    runs-on: ubuntu-latest
    name: NG-CHM-Artifacts tag
    needs: make_build_tag
    strategy:
      max-parallel: 1
    env:
      Artifacts_REPOSITORY: "${{ github.repository_owner }}/NG-CHM-Artifacts"
      Artifacts_BRANCH: "main"
      JAVA_VERSION: 11
    steps:
      - name: Make git info available for ant build
        run: |
          echo "GIT_COMMIT=`echo ${{ github.sha }} | cut -c1-7`" >> $GITHUB_ENV
          echo "GIT_LATEST_TAG=${{ needs.make_build_tag.outputs.tag_name }}" >> $GITHUB_ENV
      - name: Checkout build tag
        uses: actions/checkout@v4.1.4
        with:
          ref: ${{ needs.make_build_tag.outputs.tag_name }}
      - name: Set up JDK for java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: "${{ env.JAVA_VERSION }}"
          distribution: 'temurin'
      - name: Build ShaidyMapGen.jar
        run: |
          cd NGCHM
          ant -f build_shaidyRmapgen.xml
      - name: Build GalaxyMapGen.jar
        run: |
          cd NGCHM
          ant -f build_galaxymapgen.xml
      - name: Build GUIBuilderMapGen.jar
        run: |
          cd NGCHM
          ant -f build_guibuildermapgen.xml
      - name: Build NG-CHM standalone files and server.app
        run: |
          cd NGCHM
          ant -f build_ngchmApp.xml
